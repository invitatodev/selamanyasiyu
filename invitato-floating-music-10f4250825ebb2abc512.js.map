{"version":3,"sources":["webpack://gatsby-starter-hello-world/./node_modules/@invitato/helpers/dist/isDevelopmentMode.js","webpack://gatsby-starter-hello-world/./src/components/Common/FloatingMusic/assets/bg-sound.mp3","webpack://gatsby-starter-hello-world/./src/components/Common/FloatingMusic/index.js"],"names":["exports","window","location","href","includes","error","console","log","FloatingMusic","shouldShowMusicIcon","useState","play","setPlay","musicId","setMusicId","useEffect","DISABLED_MUSIC_IN_DEVELOPMENT","isDevelopmentMode","Fragment","id","loop","className","src","MusicBacksound","type","borderRadius","position","zIndex","bottom","left","size","colorScheme","bgColor","BG_NAVIGATION","onClick","myAudio","document","getElementById","label","pause","trackCustomEvent","category","action","icon","color","React"],"mappings":"0IAsBAA,EAAQ,EAZR,WACE,IACE,QAA+B,IAApBC,OAAOC,UACZD,OAAOC,SAASC,KAAKC,SAAS,eAAgB,OAAO,EAE3D,MAAOC,GACPC,QAAQC,IAAI,uBAGd,OAAO,I,kKCnBT,EAAe,IAA0B,uD,UCYzC,SAASC,EAAT,GAAiD,IAAxBC,EAAuB,EAAvBA,oBACvB,GAAwBC,eAAS,GAA1BC,EAAP,KAAaC,EAAb,KACA,GAA8BF,cAAS,WAAhCG,EAAP,KAAgBC,EAAhB,MAMAC,gBAAU,WACJC,OAAiCC,UACnCH,EAAW,oBAEZ,IA0BH,OACE,QAAC,EAAAI,SAAD,MACE,QAAC,KAAD,MACE,iBAAOC,GAAIN,EAASO,MAAI,EAACC,UAAU,SACjC,kBAAQC,IAAiB,mBAAZT,EAA+B,GAAKU,EAAgBC,KAAK,eADxE,oDAKCf,IACC,QAAC,IAAD,CACEgB,aAAa,MACbC,SAAS,QACTC,OAAO,MACPC,OAAO,OACPC,KAAK,OACLC,KAAK,KACLC,YAAY,aACZC,QAASC,KACTC,QAtCU,WAClB,IACE,IAAMC,EAAUC,SAASC,eAAe,WACpCC,EAAQ,GAER3B,GACFwB,EAAQI,QACRD,EAAQ,UAERH,EAAQxB,OACR2B,EAAQ,QAGV1B,GAASD,IACT6B,OAAiB,CAAEC,SAAU,QAASH,QAAOI,OAAQ,qBACrD,SACApC,QAAQD,MAAM,wCAuBRsC,KAAMhC,GAAO,QAAC,KAAD,CAAaiC,MAAM,WAAa,QAAC,MAAD,CAAYA,MAAM,cAY3E,MAAeC,OAAWrC","file":"invitato-floating-music-10f4250825ebb2abc512.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Function to check is Development Mode or Not\n * @return {boolean}\n */\n\nfunction isDevelopment() {\n  try {\n    if (typeof window.location !== 'undefined') {\n      if (window.location.href.includes('//localhost')) return true;\n    }\n  } catch (error) {\n    console.log('ERR_WHEN_ACCESS_DOM');\n  }\n\n  return false;\n}\n\nexports.default = isDevelopment;","export default __webpack_public_path__ + \"static/bg-sound-3e16669cd38abaa854e68a22c5690f65.mp3\";","import React, { Fragment, useState, useEffect } from 'react';\nimport { bool } from 'prop-types';\nimport { IconButton, Box } from '@chakra-ui/react';\nimport { MdMusicNote, MdMusicOff } from 'react-icons/md';\nimport { trackCustomEvent } from 'gatsby-plugin-google-analytics';\n\nimport isDevelopmentMode from '@invitato/helpers/dist/isDevelopmentMode';\n\nimport { DISABLED_MUSIC_IN_DEVELOPMENT } from '@/constants/features-flag';\nimport { BG_NAVIGATION } from '@/constants/colors';\nimport MusicBacksound from './assets/bg-sound.mp3';\n\nfunction FloatingMusic({ shouldShowMusicIcon }) {\n  const [play, setPlay] = useState(true);\n  const [musicId, setMusicId] = useState('myAudio');\n\n  /**\n   * Side-effect to enable/disable music\n   * @important Only disable music IF in development mode\n   */\n  useEffect(() => {\n    if (DISABLED_MUSIC_IN_DEVELOPMENT && isDevelopmentMode()) {\n      setMusicId('DISABLED_MUSIC');\n    }\n  }, []);\n\n  /**\n   * This function built-in with html5 function\n   * doc: https://www.w3schools.com/tags/ref_av_dom.asp\n   */\n  const toggleMusic = () => {\n    try {\n      const myAudio = document.getElementById('myAudio');\n      let label = '';\n\n      if (play) {\n        myAudio.pause();\n        label = 'pause';\n      } else {\n        myAudio.play();\n        label = 'play';\n      }\n\n      setPlay(!play);\n      trackCustomEvent({ category: 'music', label, action: 'click icon music' });\n    } catch {\n      console.error('SOMETHING_WRONG_WHEN_PLAYING_MUSIC');\n    }\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <audio id={musicId} loop className=\"hide\">\n          <source src={musicId === 'DISABLED_MUSIC' ? '' : MusicBacksound} type=\"audio/mpeg\" />\n          Your browser does not support the audio element.\n        </audio>\n\n        {shouldShowMusicIcon && (\n          <IconButton\n            borderRadius=\"50%\"\n            position=\"fixed\"\n            zIndex=\"999\"\n            bottom=\"12px\"\n            left=\"48px\"\n            size=\"sm\"\n            colorScheme=\"blackAlpha\"\n            bgColor={BG_NAVIGATION}\n            onClick={toggleMusic}\n            icon={play ? <MdMusicNote color=\"white\" /> : <MdMusicOff color=\"white\" />}\n          />\n        )}\n      </Box>\n    </Fragment>\n  );\n}\n\nFloatingMusic.propTypes = {\n  shouldShowMusicIcon: bool.isRequired,\n};\n\nexport default React.memo(FloatingMusic);\n"],"sourceRoot":""}